1/
DECLARE
v_customers Customer%rowtype

BEGIN
SELECT rec INTO v_customers FROM Customer
dbms_output.put_inline(rec.Customer_id |''| rec.customer_Name |''| rec.customer_Tel)
END
/

2/
DECLARE
CREATE OR REPLACE PROCEDURE PS_CUSTOMER_PRODUCTS(v_customer_id Orders.customer_id%type) 
IS|AS
CURSOR c(v_customer_id) IS 
SELECT p.product_name FROM Orders o 
   INNER JOIN Product p ON o.product_id = p.product_id
WHERE Orders.customer_id = v_customer_id
BEGIN

FOR cur IN c LOOP
 dbms_output.put_inline('name of the product :'||cur.product_name) 
END LOOP

 IF(no_data_found) THEN
     dbms_output.put_inline("No products returned or customer not found")    
 END IF
END


3/
DECLARE
CREATE OR REPLACE FUNCTION FN_Customer_Orders(v_customer_id Orders.customer_id%type): number
IS|AS
total number:=0
BEGIN
  SELECT COUNT(*) INTO total FROM Orders WHERE Orders.customer_id = v_customer_id;
  RETURN total;
END

4/
CREATE TRIGGER trig_log  BEFORE INSERT ON Orders FOR EACH ROW
BEGIN
 IF (:old.OrderDate >= SysDate) THEN
    dbms_output.put_inline("Order Date must be greater than or equal to today's date")    
 END_IF
    
END






